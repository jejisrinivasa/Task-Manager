{"version":3,"sources":["context/TaskListContext.js","components/Task.js","components/TaskList.js","components/TaskForm.js","components/Header.js","components/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","editItem","setEditItem","useEffect","setItem","stringify","Provider","value","addTask","title","id","uuidv4","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","children","Task","useContext","className","onClick","TaskList","length","key","TaskForm","setTitle","onSubmit","e","preventDefault","onChange","target","type","placeholder","required","Header","App","ReactDOM","render","document","getElementById"],"mappings":"qLAEaA,EAAkBC,0BAwDhBC,EAtDiB,SAACC,GAC/B,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GADzB,EAEfC,mBAASL,GAFM,mBAElCM,EAFkC,KAE3BC,EAF2B,OAITF,mBAAS,MAJA,mBAIlCG,EAJkC,KAIxBC,EAJwB,KAMzCC,qBAAU,WACRP,aAAaQ,QAAQ,QAASV,KAAKW,UAAUN,MAC5C,CAACA,IA6BJ,OACE,kBAACV,EAAgBiB,SAAjB,CACEC,MAAO,CACLR,QACAS,QA/BU,SAACC,GACfT,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEU,QAAOC,GAAIC,mBA+B7BC,WA5Ba,SAACF,GAClBV,EAASD,EAAMc,QAAO,SAACC,GAAD,OAAUA,EAAKJ,KAAOA,OA4BxCK,UAzBY,WAChBf,EAAS,KAyBLgB,SAtBW,SAACN,GAChB,IAAMO,EAAOlB,EAAMmB,MAAK,SAACJ,GAAD,OAAUA,EAAKJ,KAAOA,KAE9CR,EAAYe,IAoBRE,SAjBW,SAACV,EAAOC,GACvB,IAAMU,EAAWrB,EAAMsB,KAAI,SAACP,GAAD,OACzBA,EAAKJ,KAAOA,EAAK,CAAED,QAAOC,MAAOI,KAGnCd,EAASoB,GACTlB,EAAY,OAYRD,aAGDT,EAAM8B,WC/BEC,EAnBF,SAAC,GAAY,IAAXT,EAAU,EAAVA,KAAU,EAESU,qBAAWnC,GAAlCuB,EAFc,EAEdA,WAAWI,EAFG,EAEHA,SAClB,OACI,wBAAIS,UAAU,aACV,8BAAOX,EAAKL,OACZ,6BACI,4BAAQiB,QAAS,kBAAMd,EAAWE,EAAKJ,KAAKe,UAAU,uBAClD,uBAAGA,UAAU,sBAGjB,4BAAQC,QAAS,kBAAMV,EAASF,EAAKJ,KAAKe,UAAU,qBAChD,uBAAGA,UAAU,mBCMlBE,EAjBE,WAAO,IACd5B,EAAUyB,qBAAWnC,GAArBU,MACR,OACE,6BACGA,EAAM6B,OACL,wBAAIH,UAAU,QACX1B,EAAMsB,KAAI,SAACP,GACV,OAAO,kBAAC,EAAD,CAAMA,KAAMA,EAAMe,IAAKf,EAAKJ,SAIvC,yBAAKe,UAAU,YAAf,cCiCOK,EA9CE,WAAO,IAAD,EAC2BN,qBAAWnC,GAAlDmB,EADY,EACZA,QAAQO,EADI,EACJA,UAAUd,EADN,EACMA,SAASkB,EADf,EACeA,SADf,EAEMrB,mBAAS,IAFf,mBAEZW,EAFY,KAENsB,EAFM,KAyBnB,OARA5B,qBAAU,WAEF4B,EADD9B,EACUA,EAASQ,MAET,MAEf,CAACR,IAGC,0BAAM+B,SApBW,SAAAC,GACjBA,EAAEC,iBACEjC,EAIAkB,EAASV,EAAMR,EAASS,KAHxBF,EAAQC,GACRsB,EAAS,MAgBiBN,UAAU,QACpC,2BACAU,SAzBa,SAAAF,GACjBF,EAASE,EAAEG,OAAO7B,QAyBd8B,KAAK,OACL9B,MAAOE,EACPgB,UAAU,aACVa,YAAY,cACZC,UAAQ,IACR,yBAAKd,UAAU,WACX,4BAAQY,KAAK,SAASZ,UAAU,oBAC3BxB,EAAW,YAAY,YAE5B,4BAAQyB,QAASX,EAAWU,UAAU,iBAAtC,YC9BDe,EARA,WACX,OACI,yBAAKf,UAAU,UACX,8CCkBGgB,G,MAhBH,WACR,OACI,kBAAC,EAAD,KACA,yBAAKhB,UAAU,aACX,yBAAKA,UAAU,eACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACf,kBAAC,EAAD,MACA,kBAAC,EAAD,YCXhBiB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.c678fb1a.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nexport const TaskListContext = createContext();\r\n\r\nconst TaskListContextProvider = (props) => {\r\n  const initialState = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n  const [tasks, setTasks] = useState(initialState);\r\n\r\n  const [editItem, setEditItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const addTask = (title) => {\r\n    setTasks([...tasks, { title, id: uuidv4() }]);\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const clearList = () => {\r\n    setTasks([]);\r\n  };\r\n\r\n  const findItem = (id) => {\r\n    const item = tasks.find((task) => task.id === id);\r\n\r\n    setEditItem(item);\r\n  };\r\n\r\n  const editTask = (title, id) => {\r\n    const newTasks = tasks.map((task) =>\r\n      task.id === id ? { title, id } : task\r\n    );\r\n\r\n    setTasks(newTasks);\r\n    setEditItem(null);\r\n  };\r\n\r\n  return (\r\n    <TaskListContext.Provider\r\n      value={{\r\n        tasks,\r\n        addTask,\r\n        removeTask,\r\n        clearList,\r\n        findItem,\r\n        editTask,\r\n        editItem,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TaskListContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TaskListContextProvider;\r\n","import React,{useContext} from 'react';\r\nimport {TaskListContext} from '../context/TaskListContext';\r\n\r\nconst Task = ({task}) => {\r\n\r\n    const {removeTask,findItem} = useContext(TaskListContext)\r\n    return (\r\n        <li className=\"list-item\">\r\n            <span>{task.title}</span>\r\n            <div>\r\n                <button onClick={() => removeTask(task.id)} className=\"btn-delete task-btn\">\r\n                    <i className=\"fas fa-trash-alt\"></i>\r\n                </button>\r\n\r\n                <button onClick={() => findItem(task.id)} className=\"btn-edit task-btn\">\r\n                    <i className=\"fas fa-pen\"></i>\r\n                </button>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Task;\r\n","import React, { useContext } from \"react\";\r\nimport { TaskListContext } from \"../context/TaskListContext\";\r\nimport Task from \"./Task\";\r\n\r\nconst TaskList = () => {\r\n  const { tasks } = useContext(TaskListContext);\r\n  return (\r\n    <div>\r\n      {tasks.length ? (\r\n        <ul className=\"list\">\r\n          {tasks.map((task) => {\r\n            return <Task task={task} key={task.id} />;\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <div className=\"no-tasks\">No Tasks</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React,{useContext,useState,useEffect} from 'react'\r\nimport {TaskListContext} from '../context/TaskListContext'\r\nconst TaskForm = () => {\r\n    const {addTask,clearList,editItem,editTask} = useContext(TaskListContext);\r\n    const [title,setTitle] = useState(\"\")\r\n    const handleChange = e =>{\r\n        setTitle(e.target.value);\r\n    }\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        if(!editItem){\r\n            addTask(title);\r\n            setTitle(\"\");\r\n        }else{\r\n            editTask(title,editItem.id);\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(editItem){\r\n            setTitle(editItem.title)\r\n        }else{\r\n            setTitle(\"\");\r\n        }\r\n    },[editItem]);\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"form\">\r\n            <input \r\n            onChange={handleChange}\r\n            type=\"text\" \r\n            value={title}\r\n            className=\"task-input\" \r\n            placeholder=\"Add Task...\"\r\n            required />\r\n            <div className=\"buttons\">\r\n                <button type=\"submit\" className=\"btn add-task-btn\">\r\n                    {editItem ? 'Edit Task':'Add Task'}\r\n                </button>\r\n                <button onClick={clearList} className=\"btn clear-btn\">\r\n                    Clear\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TaskForm\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Task Manager</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport TaskList from './TaskList';\r\nimport TaskForm from './TaskForm';\r\nimport Header from './Header';\r\nimport TaskListContextProvider from '../context/TaskListContext';\r\nimport \"../App.css\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <TaskListContextProvider>\r\n        <div className=\"container\">\r\n            <div className=\"app-wrapper\">\r\n                <Header />\r\n                <div className=\"main\">\r\n                <TaskForm />\r\n                <TaskList />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </TaskListContextProvider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}